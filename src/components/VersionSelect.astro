---
import { VERSIONS } from '../data/versions';

// Get current page path relative to version
const path = Astro.url.pathname;
let currentPage = '';

// If we're in a versioned page, extract the page path
if (path.includes('/versions/')) {
  const matches = path.match(/\/versions\/[^/]+(\/.*)$/);
  if (matches && matches[1]) {
    currentPage = matches[1];
  }
} else if (path.startsWith('/cqtkit-docs/')) {
  // We're on the latest version
  currentPage = path.replace('/cqtkit-docs', '');
}

// If current page is empty, set to home
if (!currentPage) currentPage = '/';

// Check if we're on a versioned page
let currentVersion = null;
for (const version of VERSIONS) {
  if (path.includes(`/versions/${version.tag}/`)) {
    currentVersion = version.tag;
    break;
  }
}
// If not on a versioned page, we're on latest
const isLatest = currentVersion === null;
---

<select
  id="version-select"
  aria-label="Documentation version"
  style="padding:.25rem;border-radius:.25rem"
  onchange="window.location.href = this.value"
>
  <!-- Latest (untagged development version) -->
  <option value={`/cqtkit-docs${currentPage}`} selected={isLatest}>
		Development Version 
  </option>
  
  <!-- Tagged versions -->
  {VERSIONS.map(version => {
    const versionUrl = `/cqtkit-docs/versions/${version.tag}${currentPage}`;
    const isSelected = currentVersion === version.tag;
    
    return (
      <option value={versionUrl} selected={isSelected}>
        {version.label}
      </option>
    );
  })}
</select>
